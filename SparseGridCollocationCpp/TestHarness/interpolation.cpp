#include "stdafx.h"
#include <iostream>

using namespace Leicester::Common;

map<string, vector<vector<MatrixXd>>> Interpolation::GetInterpolation()
{
	map<string, vector<vector<MatrixXd>>> result;

	MatrixXd TX2 = Utility::ReadBinary("interpolation_2_1_0.dat", 9, 2);
	MatrixXd C2 = Utility::ReadBinary("interpolation_2_2_0.dat", 1, 2);
	MatrixXd A2 = Utility::ReadBinary("interpolation_2_3_0.dat", 1, 2);
	vector<MatrixXd> l2 = { data::GetLamb2() };
	vector<MatrixXd> tx2 = { TX2 };
	vector<MatrixXd> c2 = { C2 };
	vector<MatrixXd> a2 = { A2 };
	vector<vector<MatrixXd>> v2 = { l2, tx2, c2, a2 };
	result["2"] = v2;

	MatrixXd TX3_1 = Utility::ReadBinary("interpolation_3_1_0.dat", 15, 2);
	MatrixXd TX3_2 = Utility::ReadBinary("interpolation_3_1_1.dat", 15, 2);
	MatrixXd C3_1 = Utility::ReadBinary("interpolation_3_2_0.dat", 1, 2);
	MatrixXd C3_2 = Utility::ReadBinary("interpolation_3_2_1.dat", 1, 2);
	MatrixXd A3_1 = Utility::ReadBinary("interpolation_3_3_0.dat", 1, 2);
	MatrixXd A3_2 = Utility::ReadBinary("interpolation_3_3_1.dat", 1, 2);
	vector<MatrixXd> l3 = { data::GetLamb3(1), data::GetLamb3(2) };
	vector<MatrixXd> tx3 = { TX3_1, TX3_2 };
	vector<MatrixXd> c3 = { C3_1, C3_2 };
	vector<MatrixXd> a3 = { A3_1, A3_2 };
	vector<vector<MatrixXd>> v3 = { l3, tx3, c3, a3 };
	result["3"] = v3;

	MatrixXd TX_3_1 = Utility::ReadBinary("interpolation__3_1_0.dat", 15, 2);
	MatrixXd TX_3_2 = Utility::ReadBinary("interpolation__3_1_1.dat", 15, 2);
	MatrixXd C_3_1 = Utility::ReadBinary("interpolation__3_2_0.dat", 1, 2);
	MatrixXd C_3_2 = Utility::ReadBinary("interpolation__3_2_1.dat", 1, 2);
	MatrixXd A_3_1 = Utility::ReadBinary("interpolation__3_3_0.dat", 1, 2);
	MatrixXd A_3_2 = Utility::ReadBinary("interpolation__3_3_1.dat", 1, 2);
	vector<MatrixXd> l_3 = { data::GetLamb_3(1), data::GetLamb_3(2) };
	vector<MatrixXd> tx_3 = { TX_3_1, TX_3_2 };
	vector<MatrixXd> c_3 = { C_3_1, C_3_2 };
	vector<MatrixXd> a_3 = { A_3_1, A_3_2 };
	vector<vector<MatrixXd>> v_3 = { l_3, tx_3, c_3, a_3 };
	result["_3"] = v_3;


	MatrixXd TX4_1 = Utility::ReadBinary("interpolation_4_1_0.dat", 27, 2);
	MatrixXd TX4_2 = Utility::ReadBinary("interpolation_4_1_1.dat", 25, 2);
	MatrixXd TX4_3 = Utility::ReadBinary("interpolation_4_1_2.dat", 27, 2);
	MatrixXd C4_1 = Utility::ReadBinary("interpolation_4_2_0.dat", 1, 2);
	MatrixXd C4_2 = Utility::ReadBinary("interpolation_4_2_1.dat", 1, 2);
	MatrixXd C4_3 = Utility::ReadBinary("interpolation_4_2_2.dat", 1, 2);
	MatrixXd A4_1 = Utility::ReadBinary("interpolation_4_3_0.dat", 1, 2);
	MatrixXd A4_2 = Utility::ReadBinary("interpolation_4_3_1.dat", 1, 2);
	MatrixXd A4_3 = Utility::ReadBinary("interpolation_4_3_2.dat", 1, 2);
	vector<MatrixXd> l4 = { data::GetLamb4(1), data::GetLamb4(2),data::GetLamb4(3) };
	vector<MatrixXd> tx4 = { TX4_1, TX4_2, TX4_3 };
	vector<MatrixXd> c4 = { C4_1, C4_2, C4_3 };
	vector<MatrixXd> a4 = { A4_1, A4_2, A4_3 };
	vector<vector<MatrixXd>> v4 = { l4, tx4, c4, a4 };
	result["4"] = v4;

	MatrixXd TX_4_1 = Utility::ReadBinary("interpolation__4_1_0.dat", 27, 2);
	MatrixXd TX_4_2 = Utility::ReadBinary("interpolation__4_1_1.dat", 25, 2);
	MatrixXd TX_4_3 = Utility::ReadBinary("interpolation__4_1_2.dat", 27, 2);
	MatrixXd C_4_1 = Utility::ReadBinary("interpolation__4_2_0.dat", 1, 2);
	MatrixXd C_4_2 = Utility::ReadBinary("interpolation__4_2_1.dat", 1, 2);
	MatrixXd C_4_3 = Utility::ReadBinary("interpolation__4_2_2.dat", 1, 2);
	MatrixXd A_4_1 = Utility::ReadBinary("interpolation__4_3_0.dat", 1, 2);
	MatrixXd A_4_2 = Utility::ReadBinary("interpolation__4_3_1.dat", 1, 2);
	MatrixXd A_4_3 = Utility::ReadBinary("interpolation__4_3_2.dat", 1, 2);
	vector<MatrixXd> l_4 = { data::GetLamb_4(1), data::GetLamb_4(2),data::GetLamb_4(3) };
	vector<MatrixXd> tx_4 = { TX_4_1, TX_4_2, TX_4_3 };
	vector<MatrixXd> c_4 = { C_4_1, C_4_2, C_4_3 };
	vector<MatrixXd> a_4 = { A_4_1, A_4_2, A_4_3 };
	vector<vector<MatrixXd>> v_4 = { l_4, tx_4, c_4, a_4 };
	result["_4"] = v_4;

	MatrixXd TX5_1 = Utility::ReadBinary("interpolation_5_1_0.dat", 51, 2);
	MatrixXd TX5_2 = Utility::ReadBinary("interpolation_5_1_1.dat", 45, 2);
	MatrixXd TX5_3 = Utility::ReadBinary("interpolation_5_1_2.dat", 45, 2);
	MatrixXd TX5_4 = Utility::ReadBinary("interpolation_5_1_3.dat", 51, 2);
	MatrixXd C5_1 = Utility::ReadBinary("interpolation_5_2_0.dat", 1, 2);
	MatrixXd C5_2 = Utility::ReadBinary("interpolation_5_2_1.dat", 1, 2);
	MatrixXd C5_3 = Utility::ReadBinary("interpolation_5_2_2.dat", 1, 2);
	MatrixXd C5_4 = Utility::ReadBinary("interpolation_5_2_3.dat", 1, 2);
	MatrixXd A5_1 = Utility::ReadBinary("interpolation_5_3_0.dat", 1, 2);
	MatrixXd A5_2 = Utility::ReadBinary("interpolation_5_3_1.dat", 1, 2);
	MatrixXd A5_3 = Utility::ReadBinary("interpolation_5_3_2.dat", 1, 2);
	MatrixXd A5_4 = Utility::ReadBinary("interpolation_5_3_3.dat", 1, 2);
	vector<MatrixXd> l5 = { data::GetLamb5(1), data::GetLamb5(2),data::GetLamb5(3),data::GetLamb5(4) };
	vector<MatrixXd> tx5 = { TX5_1, TX5_2, TX5_3, TX5_4 };
	vector<MatrixXd> c5 = { C5_1, C5_2, C5_3, C5_4 };
	vector<MatrixXd> a5 = { A5_1, A5_2, A5_3, A5_4 };
	vector<vector<MatrixXd>> v5 = { l5, tx5, c5, a5 };
	result["5"] = v5;

	MatrixXd TX_5_1 = Utility::ReadBinary("interpolation_5_1_0.dat", 51, 2);
	MatrixXd TX_5_2 = Utility::ReadBinary("interpolation_5_1_1.dat", 45, 2);
	MatrixXd TX_5_3 = Utility::ReadBinary("interpolation_5_1_2.dat", 45, 2);
	MatrixXd TX_5_4 = Utility::ReadBinary("interpolation_5_1_3.dat", 51, 2);
	MatrixXd C_5_1 = Utility::ReadBinary("interpolation_5_2_0.dat", 1, 2);
	MatrixXd C_5_2 = Utility::ReadBinary("interpolation_5_2_1.dat", 1, 2);
	MatrixXd C_5_3 = Utility::ReadBinary("interpolation_5_2_2.dat", 1, 2);
	MatrixXd C_5_4 = Utility::ReadBinary("interpolation_5_2_3.dat", 1, 2);
	MatrixXd A_5_1 = Utility::ReadBinary("interpolation_5_3_0.dat", 1, 2);
	MatrixXd A_5_2 = Utility::ReadBinary("interpolation_5_3_1.dat", 1, 2);
	MatrixXd A_5_3 = Utility::ReadBinary("interpolation_5_3_2.dat", 1, 2);
	MatrixXd A_5_4 = Utility::ReadBinary("interpolation_5_3_3.dat", 1, 2);
	vector<MatrixXd> l_5 = { data::GetLamb_5(1), data::GetLamb_5(2),data::GetLamb_5(3),data::GetLamb_5(4) };
	vector<MatrixXd> tx_5 = { TX_5_1, TX_5_2, TX_5_3, TX_5_4 };
	vector<MatrixXd> c_5 = { C_5_1, C_5_2, C_5_3, C_5_4 };
	vector<MatrixXd> a_5 = { A_5_1, A_5_2, A_5_3, A_5_4 };
	vector<vector<MatrixXd>> v_5 = { l_5, tx_5, c_5, a_5 };
	result["_5"] = v_5;

	MatrixXd TX6_1 = Utility::ReadBinary("interpolation_6_1_0.dat", 99, 2);
	MatrixXd TX6_2 = Utility::ReadBinary("interpolation_6_1_1.dat", 85, 2);
	MatrixXd TX6_3 = Utility::ReadBinary("interpolation_6_1_2.dat", 81, 2);
	MatrixXd TX6_4 = Utility::ReadBinary("interpolation_6_1_3.dat", 85, 2);
	MatrixXd TX6_5 = Utility::ReadBinary("interpolation_6_1_4.dat", 99, 2);
	MatrixXd C6_1 = Utility::ReadBinary("interpolation_6_2_0.dat", 1, 2);
	MatrixXd C6_2 = Utility::ReadBinary("interpolation_6_2_1.dat", 1, 2);
	MatrixXd C6_3 = Utility::ReadBinary("interpolation_6_2_2.dat", 1, 2);
	MatrixXd C6_4 = Utility::ReadBinary("interpolation_6_2_3.dat", 1, 2);
	MatrixXd C6_5 = Utility::ReadBinary("interpolation_6_2_4.dat", 1, 2);
	MatrixXd A6_1 = Utility::ReadBinary("interpolation_6_3_0.dat", 1, 2);
	MatrixXd A6_2 = Utility::ReadBinary("interpolation_6_3_1.dat", 1, 2);
	MatrixXd A6_3 = Utility::ReadBinary("interpolation_6_3_2.dat", 1, 2);
	MatrixXd A6_4 = Utility::ReadBinary("interpolation_6_3_3.dat", 1, 2);
	MatrixXd A6_5 = Utility::ReadBinary("interpolation_6_3_4.dat", 1, 2);
	vector<MatrixXd> l6 = { data::GetLamb6(1), data::GetLamb6(2),data::GetLamb6(3),data::GetLamb6(4),data::GetLamb6(5) };
	vector<MatrixXd> tx6 = { TX6_1, TX6_2, TX6_3, TX6_4, TX6_5 };
	vector<MatrixXd> c6 = { C6_1, C6_2, C6_3, C6_4, C6_5 };
	vector<MatrixXd> a6 = { A6_1, A6_2, A6_3, A6_4, A6_5 };
	vector<vector<MatrixXd>> v6 = { l6, tx6, c6, a6 };
	result["6"] = v6;


	MatrixXd TX_6_1 = Utility::ReadBinary("interpolation__6_1_0.dat", 99, 2);
	MatrixXd TX_6_2 = Utility::ReadBinary("interpolation__6_1_1.dat", 85, 2);
	MatrixXd TX_6_3 = Utility::ReadBinary("interpolation__6_1_2.dat", 81, 2);
	MatrixXd TX_6_4 = Utility::ReadBinary("interpolation__6_1_3.dat", 85, 2);
	MatrixXd TX_6_5 = Utility::ReadBinary("interpolation__6_1_4.dat", 99, 2);
	MatrixXd C_6_1 = Utility::ReadBinary("interpolation__6_2_0.dat", 1, 2);
	MatrixXd C_6_2 = Utility::ReadBinary("interpolation__6_2_1.dat", 1, 2);
	MatrixXd C_6_3 = Utility::ReadBinary("interpolation__6_2_2.dat", 1, 2);
	MatrixXd C_6_4 = Utility::ReadBinary("interpolation__6_2_3.dat", 1, 2);
	MatrixXd C_6_5 = Utility::ReadBinary("interpolation__6_2_4.dat", 1, 2);
	MatrixXd A_6_1 = Utility::ReadBinary("interpolation__6_3_0.dat", 1, 2);
	MatrixXd A_6_2 = Utility::ReadBinary("interpolation__6_3_1.dat", 1, 2);
	MatrixXd A_6_3 = Utility::ReadBinary("interpolation__6_3_2.dat", 1, 2);
	MatrixXd A_6_4 = Utility::ReadBinary("interpolation__6_3_3.dat", 1, 2);
	MatrixXd A_6_5 = Utility::ReadBinary("interpolation__6_3_4.dat", 1, 2);
	vector<MatrixXd> l_6 = { data::GetLamb_6(1), data::GetLamb_6(2),data::GetLamb_6(3),data::GetLamb_6(4),data::GetLamb_6(5) };
	vector<MatrixXd> tx_6 = { TX_6_1, TX_6_2, TX_6_3, TX_6_4, TX_6_5 };
	vector<MatrixXd> c_6 = { C_6_1, C_6_2, C_6_3, C_6_4, C_6_5 };
	vector<MatrixXd> a_6 = { A_6_1, A_6_2, A_6_3, A_6_4, A_6_5 };
	vector<vector<MatrixXd>> v_6 = { l_6, tx_6, c_6, a_6 };
	result["_6"] = v_6;

	MatrixXd TX7_1 = Utility::ReadBinary("interpolation_7_1_0.dat", 195, 2);
	MatrixXd TX7_2 = Utility::ReadBinary("interpolation_7_1_1.dat", 165, 2);
	MatrixXd TX7_3 = Utility::ReadBinary("interpolation_7_1_2.dat", 153, 2);
	MatrixXd TX7_4 = Utility::ReadBinary("interpolation_7_1_3.dat", 153, 2);
	MatrixXd TX7_5 = Utility::ReadBinary("interpolation_7_1_4.dat", 165, 2);
	MatrixXd TX7_6 = Utility::ReadBinary("interpolation_7_1_5.dat", 195, 2);
	MatrixXd C7_1 = Utility::ReadBinary("interpolation_7_2_0.dat", 1, 2);
	MatrixXd C7_2 = Utility::ReadBinary("interpolation_7_2_1.dat", 1, 2);
	MatrixXd C7_3 = Utility::ReadBinary("interpolation_7_2_2.dat", 1, 2);
	MatrixXd C7_4 = Utility::ReadBinary("interpolation_7_2_3.dat", 1, 2);
	MatrixXd C7_5 = Utility::ReadBinary("interpolation_7_2_4.dat", 1, 2);
	MatrixXd C7_6 = Utility::ReadBinary("interpolation_7_2_5.dat", 1, 2);
	MatrixXd A7_1 = Utility::ReadBinary("interpolation_7_3_0.dat", 1, 2);
	MatrixXd A7_2 = Utility::ReadBinary("interpolation_7_3_1.dat", 1, 2);
	MatrixXd A7_3 = Utility::ReadBinary("interpolation_7_3_2.dat", 1, 2);
	MatrixXd A7_4 = Utility::ReadBinary("interpolation_7_3_3.dat", 1, 2);
	MatrixXd A7_5 = Utility::ReadBinary("interpolation_7_3_4.dat", 1, 2);
	MatrixXd A7_6 = Utility::ReadBinary("interpolation_7_3_5.dat", 1, 2);
	vector<MatrixXd> l7 = { data::GetLamb7(1), data::GetLamb7(2),data::GetLamb7(3),data::GetLamb7(4),data::GetLamb7(5),data::GetLamb7(6) };
	vector<MatrixXd> tx7 = { TX7_1, TX7_2, TX7_3, TX7_4, TX7_5, TX7_6 };
	vector<MatrixXd> c7 = { C7_1, C7_2, C7_3, C7_4, C7_5, C7_6 };
	vector<MatrixXd> a7 = { A7_1, A7_2, A7_3, A7_4, A7_5, A7_6 };
	vector<vector<MatrixXd>> v7 = { l7, tx7, c7, a7 };
	result["7"] = v7;

	MatrixXd TX_7_1 = Utility::ReadBinary("interpolation__7_1_0.dat", 195, 2);
	MatrixXd TX_7_2 = Utility::ReadBinary("interpolation__7_1_1.dat", 165, 2);
	MatrixXd TX_7_3 = Utility::ReadBinary("interpolation__7_1_2.dat", 153, 2);
	MatrixXd TX_7_4 = Utility::ReadBinary("interpolation__7_1_3.dat", 153, 2);
	MatrixXd TX_7_5 = Utility::ReadBinary("interpolation__7_1_4.dat", 165, 2);
	MatrixXd TX_7_6 = Utility::ReadBinary("interpolation__7_1_5.dat", 195, 2);
	MatrixXd C_7_1 = Utility::ReadBinary("interpolation__7_2_0.dat", 1, 2);
	MatrixXd C_7_2 = Utility::ReadBinary("interpolation__7_2_1.dat", 1, 2);
	MatrixXd C_7_3 = Utility::ReadBinary("interpolation__7_2_2.dat", 1, 2);
	MatrixXd C_7_4 = Utility::ReadBinary("interpolation__7_2_3.dat", 1, 2);
	MatrixXd C_7_5 = Utility::ReadBinary("interpolation__7_2_4.dat", 1, 2);
	MatrixXd C_7_6 = Utility::ReadBinary("interpolation__7_2_5.dat", 1, 2);
	MatrixXd A_7_1 = Utility::ReadBinary("interpolation__7_3_0.dat", 1, 2);
	MatrixXd A_7_2 = Utility::ReadBinary("interpolation__7_3_1.dat", 1, 2);
	MatrixXd A_7_3 = Utility::ReadBinary("interpolation__7_3_2.dat", 1, 2);
	MatrixXd A_7_4 = Utility::ReadBinary("interpolation__7_3_3.dat", 1, 2);
	MatrixXd A_7_5 = Utility::ReadBinary("interpolation__7_3_4.dat", 1, 2);
	MatrixXd A_7_6 = Utility::ReadBinary("interpolation__7_3_5.dat", 1, 2);
	vector<MatrixXd> l_7 = { data::GetLamb_7(1), data::GetLamb_7(2),data::GetLamb_7(3),data::GetLamb_7(4),data::GetLamb_7(5),data::GetLamb_7(6) };
	vector<MatrixXd> tx_7 = { TX_7_1, TX_7_2, TX_7_3, TX_7_4, TX_7_5, TX_7_6 };
	vector<MatrixXd> c_7 = { C_7_1, C_7_2, C_7_3, C_7_4, C_7_5, C_7_6 };
	vector<MatrixXd> a_7 = { A_7_1, A_7_2, A_7_3, A_7_4, A_7_5, A_7_6 };
	vector<vector<MatrixXd>> v_7 = { l_7, tx_7, c_7, a_7 };
	result["_7"] = v_7;

	MatrixXd TX8_1 = Utility::ReadBinary("interpolation_8_1_0.dat", 387, 2);
	MatrixXd TX8_2 = Utility::ReadBinary("interpolation_8_1_1.dat", 325, 2);
	MatrixXd TX8_3 = Utility::ReadBinary("interpolation_8_1_2.dat", 297, 2);
	MatrixXd TX8_4 = Utility::ReadBinary("interpolation_8_1_3.dat", 289, 2);
	MatrixXd TX8_5 = Utility::ReadBinary("interpolation_8_1_4.dat", 297, 2);
	MatrixXd TX8_6 = Utility::ReadBinary("interpolation_8_1_5.dat", 325, 2);
	MatrixXd TX8_7 = Utility::ReadBinary("interpolation_8_1_6.dat", 387, 2);
	MatrixXd C8_1 = Utility::ReadBinary("interpolation_8_2_0.dat", 1, 2);
	MatrixXd C8_2 = Utility::ReadBinary("interpolation_8_2_1.dat", 1, 2);
	MatrixXd C8_3 = Utility::ReadBinary("interpolation_8_2_2.dat", 1, 2);
	MatrixXd C8_4 = Utility::ReadBinary("interpolation_8_2_3.dat", 1, 2);
	MatrixXd C8_5 = Utility::ReadBinary("interpolation_8_2_4.dat", 1, 2);
	MatrixXd C8_6 = Utility::ReadBinary("interpolation_8_2_5.dat", 1, 2);
	MatrixXd C8_7 = Utility::ReadBinary("interpolation_8_2_6.dat", 1, 2);
	MatrixXd A8_1 = Utility::ReadBinary("interpolation_8_3_0.dat", 1, 2);
	MatrixXd A8_2 = Utility::ReadBinary("interpolation_8_3_1.dat", 1, 2);
	MatrixXd A8_3 = Utility::ReadBinary("interpolation_8_3_2.dat", 1, 2);
	MatrixXd A8_4 = Utility::ReadBinary("interpolation_8_3_3.dat", 1, 2);
	MatrixXd A8_5 = Utility::ReadBinary("interpolation_8_3_4.dat", 1, 2);
	MatrixXd A8_6 = Utility::ReadBinary("interpolation_8_3_5.dat", 1, 2);
	MatrixXd A8_7 = Utility::ReadBinary("interpolation_8_3_6.dat", 1, 2);
	vector<MatrixXd> l8 = { data::GetLamb8(1), data::GetLamb8(2),data::GetLamb8(3),data::GetLamb8(4),data::GetLamb8(5),data::GetLamb8(6),data::GetLamb8(7) };
	vector<MatrixXd> tx8 = { TX8_1, TX8_2, TX8_3, TX8_4, TX8_5, TX8_6, TX8_7 };
	vector<MatrixXd> c8 = { C8_1, C8_2, C8_3, C8_4, C8_5, C8_6, C8_7 };
	vector<MatrixXd> a8 = { A8_1, A8_2, A8_3, A8_4, A8_5, A8_6, A8_7 };
	vector<vector<MatrixXd>> v8 = { l8, tx8, c8, a8 };
	result["8"] = v8;

	MatrixXd TX_8_1 = Utility::ReadBinary("interpolation__8_1_0.dat", 387, 2);
	MatrixXd TX_8_2 = Utility::ReadBinary("interpolation__8_1_1.dat", 325, 2);
	MatrixXd TX_8_3 = Utility::ReadBinary("interpolation__8_1_2.dat", 297, 2);
	MatrixXd TX_8_4 = Utility::ReadBinary("interpolation__8_1_3.dat", 289, 2);
	MatrixXd TX_8_5 = Utility::ReadBinary("interpolation__8_1_4.dat", 297, 2);
	MatrixXd TX_8_6 = Utility::ReadBinary("interpolation__8_1_5.dat", 325, 2);
	MatrixXd TX_8_7 = Utility::ReadBinary("interpolation__8_1_6.dat", 387, 2);
	MatrixXd C_8_1 = Utility::ReadBinary("interpolation__8_2_0.dat", 1, 2);
	MatrixXd C_8_2 = Utility::ReadBinary("interpolation__8_2_1.dat", 1, 2);
	MatrixXd C_8_3 = Utility::ReadBinary("interpolation__8_2_2.dat", 1, 2);
	MatrixXd C_8_4 = Utility::ReadBinary("interpolation__8_2_3.dat", 1, 2);
	MatrixXd C_8_5 = Utility::ReadBinary("interpolation__8_2_4.dat", 1, 2);
	MatrixXd C_8_6 = Utility::ReadBinary("interpolation__8_2_5.dat", 1, 2);
	MatrixXd C_8_7 = Utility::ReadBinary("interpolation__8_2_6.dat", 1, 2);
	MatrixXd A_8_1 = Utility::ReadBinary("interpolation__8_3_0.dat", 1, 2);
	MatrixXd A_8_2 = Utility::ReadBinary("interpolation__8_3_1.dat", 1, 2);
	MatrixXd A_8_3 = Utility::ReadBinary("interpolation__8_3_2.dat", 1, 2);
	MatrixXd A_8_4 = Utility::ReadBinary("interpolation__8_3_3.dat", 1, 2);
	MatrixXd A_8_5 = Utility::ReadBinary("interpolation__8_3_4.dat", 1, 2);
	MatrixXd A_8_6 = Utility::ReadBinary("interpolation__8_3_5.dat", 1, 2);
	MatrixXd A_8_7 = Utility::ReadBinary("interpolation__8_3_6.dat", 1, 2);
	vector<MatrixXd> l_8 = { data::GetLamb_8(1), data::GetLamb_8(2),data::GetLamb_8(3),data::GetLamb_8(4),data::GetLamb_8(5),data::GetLamb_8(6),data::GetLamb_8(7) };
	vector<MatrixXd> tx_8 = { TX_8_1, TX_8_2, TX_8_3, TX_8_4, TX_8_5, TX_8_6, TX_8_7 };
	vector<MatrixXd> c_8 = { C_8_1, C_8_2, C_8_3, C_8_4, C_8_5, C_8_6, C_8_7 };
	vector<MatrixXd> a_8 = { A_8_1, A_8_2, A_8_3, A_8_4, A_8_5, A_8_6, A_8_7 };
	vector<vector<MatrixXd>> v_8 = { l_8, tx_8, c_8, a_8 };
	result["_8"] = v_8;

	MatrixXd TX9_1 = Utility::ReadBinary("interpolation_9_1_0.dat", 771, 2);
	MatrixXd TX9_2 = Utility::ReadBinary("interpolation_9_1_1.dat", 645, 2);
	MatrixXd TX9_3 = Utility::ReadBinary("interpolation_9_1_2.dat", 585, 2);
	MatrixXd TX9_4 = Utility::ReadBinary("interpolation_9_1_3.dat", 561, 2);
	MatrixXd TX9_5 = Utility::ReadBinary("interpolation_9_1_4.dat", 561, 2);
	MatrixXd TX9_6 = Utility::ReadBinary("interpolation_9_1_5.dat", 585, 2);
	MatrixXd TX9_7 = Utility::ReadBinary("interpolation_9_1_6.dat", 645, 2);
	MatrixXd TX9_8 = Utility::ReadBinary("interpolation_9_1_7.dat", 771, 2);
	MatrixXd C9_1 = Utility::ReadBinary("interpolation_9_2_0.dat", 1, 2);
	MatrixXd C9_2 = Utility::ReadBinary("interpolation_9_2_1.dat", 1, 2);
	MatrixXd C9_3 = Utility::ReadBinary("interpolation_9_2_2.dat", 1, 2);
	MatrixXd C9_4 = Utility::ReadBinary("interpolation_9_2_3.dat", 1, 2);
	MatrixXd C9_5 = Utility::ReadBinary("interpolation_9_2_4.dat", 1, 2);
	MatrixXd C9_6 = Utility::ReadBinary("interpolation_9_2_5.dat", 1, 2);
	MatrixXd C9_7 = Utility::ReadBinary("interpolation_9_2_6.dat", 1, 2);
	MatrixXd C9_8 = Utility::ReadBinary("interpolation_9_2_7.dat", 1, 2);
	MatrixXd A9_1 = Utility::ReadBinary("interpolation_9_3_0.dat", 1, 2);
	MatrixXd A9_2 = Utility::ReadBinary("interpolation_9_3_1.dat", 1, 2);
	MatrixXd A9_3 = Utility::ReadBinary("interpolation_9_3_2.dat", 1, 2);
	MatrixXd A9_4 = Utility::ReadBinary("interpolation_9_3_3.dat", 1, 2);
	MatrixXd A9_5 = Utility::ReadBinary("interpolation_9_3_4.dat", 1, 2);
	MatrixXd A9_6 = Utility::ReadBinary("interpolation_9_3_5.dat", 1, 2);
	MatrixXd A9_7 = Utility::ReadBinary("interpolation_9_3_6.dat", 1, 2);
	MatrixXd A9_8 = Utility::ReadBinary("interpolation_9_3_7.dat", 1, 2);
	vector<MatrixXd> l9 = { data::GetLamb9(1), data::GetLamb9(2),data::GetLamb9(3),data::GetLamb9(4),data::GetLamb9(5),data::GetLamb9(6),data::GetLamb9(7),data::GetLamb9(8) };
	vector<MatrixXd> tx9 = { TX9_1, TX9_2, TX9_3, TX9_4, TX9_5, TX9_6, TX9_7, TX9_8 };
	vector<MatrixXd> c9 = { C9_1, C9_2, C9_3, C9_4, C9_5, C9_6, C9_7, C9_8 };
	vector<MatrixXd> a9 = { A9_1, A9_2, A9_3, A9_4, A9_5, A9_6, A9_7, A9_8 };
	vector<vector<MatrixXd>> v9 = { l9, tx9, c9, a9 };
	result["9"] = v9;

	MatrixXd TX_9_1 = Utility::ReadBinary("interpolation__9_1_0.dat", 771, 2);
	MatrixXd TX_9_2 = Utility::ReadBinary("interpolation__9_1_1.dat", 645, 2);
	MatrixXd TX_9_3 = Utility::ReadBinary("interpolation__9_1_2.dat", 585, 2);
	MatrixXd TX_9_4 = Utility::ReadBinary("interpolation__9_1_3.dat", 561, 2);
	MatrixXd TX_9_5 = Utility::ReadBinary("interpolation__9_1_4.dat", 561, 2);
	MatrixXd TX_9_6 = Utility::ReadBinary("interpolation__9_1_5.dat", 585, 2);
	MatrixXd TX_9_7 = Utility::ReadBinary("interpolation__9_1_6.dat", 645, 2);
	MatrixXd TX_9_8 = Utility::ReadBinary("interpolation__9_1_7.dat", 771, 2);
	MatrixXd C_9_1 = Utility::ReadBinary("interpolation__9_2_0.dat", 1, 2);
	MatrixXd C_9_2 = Utility::ReadBinary("interpolation__9_2_1.dat", 1, 2);
	MatrixXd C_9_3 = Utility::ReadBinary("interpolation__9_2_2.dat", 1, 2);
	MatrixXd C_9_4 = Utility::ReadBinary("interpolation__9_2_3.dat", 1, 2);
	MatrixXd C_9_5 = Utility::ReadBinary("interpolation__9_2_4.dat", 1, 2);
	MatrixXd C_9_6 = Utility::ReadBinary("interpolation__9_2_5.dat", 1, 2);
	MatrixXd C_9_7 = Utility::ReadBinary("interpolation__9_2_6.dat", 1, 2);
	MatrixXd C_9_8 = Utility::ReadBinary("interpolation__9_2_7.dat", 1, 2);
	MatrixXd A_9_1 = Utility::ReadBinary("interpolation__9_3_0.dat", 1, 2);
	MatrixXd A_9_2 = Utility::ReadBinary("interpolation__9_3_1.dat", 1, 2);
	MatrixXd A_9_3 = Utility::ReadBinary("interpolation__9_3_2.dat", 1, 2);
	MatrixXd A_9_4 = Utility::ReadBinary("interpolation__9_3_3.dat", 1, 2);
	MatrixXd A_9_5 = Utility::ReadBinary("interpolation__9_3_4.dat", 1, 2);
	MatrixXd A_9_6 = Utility::ReadBinary("interpolation__9_3_5.dat", 1, 2);
	MatrixXd A_9_7 = Utility::ReadBinary("interpolation__9_3_6.dat", 1, 2);
	MatrixXd A_9_8 = Utility::ReadBinary("interpolation__9_3_7.dat", 1, 2);
	vector<MatrixXd> l_9 = { data::GetLamb_9(1), data::GetLamb_9(2),data::GetLamb_9(3),data::GetLamb_9(4),data::GetLamb_9(5),data::GetLamb_9(6),data::GetLamb_9(7),data::GetLamb_9(8) };
	vector<MatrixXd> tx_9 = { TX_9_1, TX_9_2, TX_9_3, TX_9_4, TX_9_5, TX_9_6, TX_9_7, TX_9_8 };
	vector<MatrixXd> c_9 = { C_9_1, C_9_2, C_9_3, C_9_4, C_9_5, C_9_6, C_9_7, C_9_8 };
	vector<MatrixXd> a_9 = { A_9_1, A_9_2, A_9_3, A_9_4, A_9_5, A_9_6, A_9_7, A_9_8 };
	vector<vector<MatrixXd>> v_9 = { l_9, tx_9, c_9, a_9 };
	result["_9"] = v_9;

	//MatrixXd TX10_1 = Utility::ReadBinary("interpolation_10_1_0.dat", 1539, 2);
	//MatrixXd TX10_2 = Utility::ReadBinary("interpolation_10_1_1.dat", 1285, 2);
	//MatrixXd TX10_3 = Utility::ReadBinary("interpolation_10_1_2.dat", 1161, 2);
	//MatrixXd TX10_4 = Utility::ReadBinary("interpolation_10_1_3.dat", 1105, 2);
	//MatrixXd TX10_5 = Utility::ReadBinary("interpolation_10_1_4.dat", 1089, 2);
	//MatrixXd TX10_6 = Utility::ReadBinary("interpolation_10_1_5.dat", 1105, 2);
	//MatrixXd TX10_7 = Utility::ReadBinary("interpolation_10_1_6.dat", 1161, 2);
	//MatrixXd TX10_8 = Utility::ReadBinary("interpolation_10_1_7.dat", 1285, 2);
	//MatrixXd TX10_9 = Utility::ReadBinary("interpolation_10_1_8.dat", 1539, 2);
	//MatrixXd C10_1 = Utility::ReadBinary("interpolation_10_2_0.dat", 1, 2);
	//MatrixXd C10_2 = Utility::ReadBinary("interpolation_10_2_1.dat", 1, 2);
	//MatrixXd C10_3 = Utility::ReadBinary("interpolation_10_2_2.dat", 1, 2);
	//MatrixXd C10_4 = Utility::ReadBinary("interpolation_10_2_3.dat", 1, 2);
	//MatrixXd C10_5 = Utility::ReadBinary("interpolation_10_2_4.dat", 1, 2);
	//MatrixXd C10_6 = Utility::ReadBinary("interpolation_10_2_5.dat", 1, 2);
	//MatrixXd C10_7 = Utility::ReadBinary("interpolation_10_2_6.dat", 1, 2);
	//MatrixXd C10_8 = Utility::ReadBinary("interpolation_10_2_7.dat", 1, 2);
	//MatrixXd C10_9 = Utility::ReadBinary("interpolation_10_2_8.dat", 1, 2);
	//MatrixXd A10_1 = Utility::ReadBinary("interpolation_10_3_0.dat", 1, 2);
	//MatrixXd A10_2 = Utility::ReadBinary("interpolation_10_3_1.dat", 1, 2);
	//MatrixXd A10_3 = Utility::ReadBinary("interpolation_10_3_2.dat", 1, 2);
	//MatrixXd A10_4 = Utility::ReadBinary("interpolation_10_3_3.dat", 1, 2);
	//MatrixXd A10_5 = Utility::ReadBinary("interpolation_10_3_4.dat", 1, 2);
	//MatrixXd A10_6 = Utility::ReadBinary("interpolation_10_3_5.dat", 1, 2);
	//MatrixXd A10_7 = Utility::ReadBinary("interpolation_10_3_6.dat", 1, 2);
	//MatrixXd A10_8 = Utility::ReadBinary("interpolation_10_3_7.dat", 1, 2);
	//MatrixXd A10_9 = Utility::ReadBinary("interpolation_10_3_8.dat", 1, 2);
	//vector<MatrixXd> l10 = { data::GetLamb10(1), data::GetLamb10(2),data::GetLamb10(3),data::GetLamb10(4),data::GetLamb10(5),data::GetLamb10(6),data::GetLamb10(7),data::GetLamb10(8),data::GetLamb10(9) };
	//vector<MatrixXd> tx10 = { TX10_1, TX10_2, TX10_3, TX10_4, TX10_5, TX10_6, TX10_7, TX10_8, TX10_9 };
	//vector<MatrixXd> c10 = { C10_1, C10_2, C10_3, C10_4, C10_5, C10_6, C10_7, C10_8, C10_9 };
	//vector<MatrixXd> a10 = { A10_1, A10_2, A10_3, A10_4, A10_5, A10_6, A10_7, A10_8, A10_9 };
	//vector<vector<MatrixXd>> v10 = { l10, tx10, c10, a10 };
	//result["10"] = v10;

	/*	MatrixXd TX_10_1 = Utility::ReadBinary("interpolation__10_1_0.dat", 1539, 2);
	MatrixXd TX_10_2 = Utility::ReadBinary("interpolation__10_1_1.dat", 1285, 2);
	MatrixXd TX_10_3 = Utility::ReadBinary("interpolation__10_1_2.dat", 1161, 2);
	MatrixXd TX_10_4 = Utility::ReadBinary("interpolation__10_1_3.dat", 1105, 2);
	MatrixXd TX_10_5 = Utility::ReadBinary("interpolation__10_1_4.dat", 1089, 2);
	MatrixXd TX_10_6 = Utility::ReadBinary("interpolation__10_1_5.dat", 1105, 2);
	MatrixXd TX_10_7 = Utility::ReadBinary("interpolation__10_1_6.dat", 1161, 2);
	MatrixXd TX_10_8 = Utility::ReadBinary("interpolation__10_1_7.dat", 1285, 2);
	MatrixXd TX_10_9 = Utility::ReadBinary("interpolation__10_1_8.dat", 1539, 2);
	MatrixXd C_10_1 = Utility::ReadBinary("interpolation__10_2_0.dat", 1, 2);
	MatrixXd C_10_2 = Utility::ReadBinary("interpolation__10_2_1.dat", 1, 2);
	MatrixXd C_10_3 = Utility::ReadBinary("interpolation__10_2_2.dat", 1, 2);
	MatrixXd C_10_4 = Utility::ReadBinary("interpolation__10_2_3.dat", 1, 2);
	MatrixXd C_10_5 = Utility::ReadBinary("interpolation__10_2_4.dat", 1, 2);
	MatrixXd C_10_6 = Utility::ReadBinary("interpolation__10_2_5.dat", 1, 2);
	MatrixXd C_10_7 = Utility::ReadBinary("interpolation__10_2_6.dat", 1, 2);
	MatrixXd C_10_8 = Utility::ReadBinary("interpolation__10_2_7.dat", 1, 2);
	MatrixXd C_10_9 = Utility::ReadBinary("interpolation__10_2_8.dat", 1, 2);
	MatrixXd A_10_1 = Utility::ReadBinary("interpolation__10_3_0.dat", 1, 2);
	MatrixXd A_10_2 = Utility::ReadBinary("interpolation__10_3_1.dat", 1, 2);
	MatrixXd A_10_3 = Utility::ReadBinary("interpolation__10_3_2.dat", 1, 2);
	MatrixXd A_10_4 = Utility::ReadBinary("interpolation__10_3_3.dat", 1, 2);
	MatrixXd A_10_5 = Utility::ReadBinary("interpolation__10_3_4.dat", 1, 2);
	MatrixXd A_10_6 = Utility::ReadBinary("interpolation__10_3_5.dat", 1, 2);
	MatrixXd A_10_7 = Utility::ReadBinary("interpolation__10_3_6.dat", 1, 2);
	MatrixXd A_10_8 = Utility::ReadBinary("interpolation__10_3_7.dat", 1, 2);
	MatrixXd A_10_9 = Utility::ReadBinary("interpolation__10_3_8.dat", 1, 2);
	vector<MatrixXd> l_10 = { data::GetLamb_10(1), data::GetLamb_10(2),data::GetLamb_10(3),data::GetLamb_10(4),data::GetLamb_10(5),data::GetLamb_10(6),data::GetLamb_10(7),data::GetLamb_10(8),data::GetLamb_10(9) };
	vector<MatrixXd> tx_10 = { TX_10_1, TX_10_2, TX_10_3, TX_10_4, TX_10_5, TX_10_6, TX_10_7, TX_10_8, TX_10_9 };
	vector<MatrixXd> c_10 = { C_10_1, C_10_2, C_10_3, C_10_4, C_10_5, C_10_6, C_10_7, C_10_8, C_10_9 };
	vector<MatrixXd> a_10 = { A_10_1, A_10_2, A_10_3, A_10_4, A_10_5, A_10_6, A_10_7, A_10_8, A_10_9 };
	vector<vector<MatrixXd>> v_10 = { l_10, tx_10, c_10, a_10 };
	result["_10"] = v_10;*/

	return result;
};